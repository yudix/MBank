package db.managers;

import helpers.MBankException;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import beans.Activity;

public class ActivityManagerJDBC implements ActivityManager {
	private Connection connection;

	public ActivityManagerJDBC(Connection connection) {
		this.connection = connection;
	}

	@Override
	public Activity addActivity(Activity activity) throws MBankException {
		String sql = "INSERT INTO `mbank`.`activities` "
				+ "(`client_id`, `amount`, `activity_date`, `commission`, `description`) "
				+ "VALUES (?, ?, ?, ?, ?);";

		try (PreparedStatement pstmt = connection.prepareStatement(sql,
				Statement.RETURN_GENERATED_KEYS)) {
			pstmt.setLong(1, activity.getClientID());
			pstmt.setDouble(2, activity.getAmount());
			pstmt.setTimestamp(3, new java.sql.Timestamp(activity
					.getActivityDate().getTime()));
			pstmt.setDouble(4, activity.getCommission());
			pstmt.setString(5, activity.getDescription());

			pstmt.executeUpdate();

			ResultSet id = pstmt.getGeneratedKeys();
			id.next();
			int autoGeneratedID = id.getInt(1);
			activity.setActivityID(autoGeneratedID);

			return activity;
		} catch (SQLException e) {
			throw new MBankException(e.getMessage());
		}
	}

	@Override
	public List<Activity> viewClientActivities(long clientID)
			throws MBankException {
		List<Activity> activities = new ArrayList<>();
		String sql = "SELECT * FROM mbank.activities WHERE client_id = ?;";
		try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
			pstmt.setLong(1, clientID);
			ResultSet resultset = pstmt.executeQuery();
			pstmt.closeOnCompletion();
			
			while (resultset.next()) {
				activities.add(new Activity(
							resultset.getLong		("activity_id"),
							resultset.getLong		("client_id"),
							resultset.getDouble		("amount"),
							resultset.getTimestamp	("activity_date"),
							resultset.getDouble 	("commission"),
							resultset.getString  	("description")
							));
			}
			return activities;
		} catch (SQLException e) {
			throw new MBankException(e.getMessage());
		}
	}

	@Override
	public List<Activity> viewAllActivities() throws MBankException {
		String sql = "SELECT * FROM mbank.activities;";
		List<Activity> activities = new ArrayList<>();
		
		try (Statement statement = connection.createStatement()) {
			ResultSet resultset = statement.executeQuery(sql);
			while (resultset.next()) {
				activities.add(new Activity(
						resultset.getLong		("activity_id"),
						resultset.getLong		("client_id"),
						resultset.getDouble		("amount"),
						resultset.getTimestamp	("activity_date"),
						resultset.getDouble 	("commission"),
						resultset.getString  	("description")
						));
			}
			return activities;
		} catch (SQLException e) {
			throw new MBankException(e.getMessage());
		}
	}
	
}
